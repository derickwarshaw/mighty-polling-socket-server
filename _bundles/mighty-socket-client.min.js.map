{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///mighty-socket-client.min.js","webpack:///webpack/bootstrap 1f4b39a54cbc312f78c1","webpack:///./client/index.ts","webpack:///./client/socket.ts","webpack:///./client/socket-client.ts"],"names":["root","factory","exports","module","define","amd","MightySocketClient","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","__export","value","SocketConnection","url","endpoint","location","document","host","protocol","port","replace","connection","WebSocket","onMessage","callback","onmessage","close","send","what","_1","SocketPollClient","_typeCallbacks","on","type","addSocketListener","_this","event","console","log","eventData","JSON","parse","data"],"mappings":"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","file":"mighty-socket-client.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MightySocketClient\"] = factory();\n\telse\n\t\troot[\"MightySocketClient\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MightySocketClient\"] = factory();\n\telse\n\t\troot[\"MightySocketClient\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction __export(m) {\n    for (var p in m) {\n        if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(1));\n__export(__webpack_require__(2));\n__export(__webpack_require__(3));\n__export(__webpack_require__(4));\n__export(__webpack_require__(5));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Base class for providing a simple proxy to an instantiated\n * `WebSocket` connection.\n *\n * @export\n * @class SocketConnection\n */\nvar SocketConnection = /** @class */function () {\n    function SocketConnection(url, endpoint) {\n        if (!url) {\n            var location = document.location;\n            var host = location.host,\n                protocol = location.protocol,\n                port = location.port;\n            url = protocol.replace(/http/, 'ws') + \"//\" + host.replace(/:.*/, '') + (port ? ':8080' : '');\n        }\n        url = url + \"/\" + (endpoint || '');\n        this.connection = new WebSocket(url);\n    }\n    SocketConnection.prototype.onMessage = function (callback) {\n        this.connection.onmessage = callback;\n    };\n    SocketConnection.prototype.close = function () {\n        this.connection.close();\n    };\n    SocketConnection.prototype.send = function (what) {\n        this.connection.send(what);\n    };\n    return SocketConnection;\n}();\nexports.SocketConnection = SocketConnection;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(0);\n/**\n * This class represents the base hub for all socket poll related\n * messaging and action. Its primary purpose is to pre-initialize a\n * socket connection, as well as provide callback functions for all\n * configured message types.\n *\n * @example\n * // configure a message type\n * const TYPE_EMERGENCY = 'emergency';\n * // initialize a new feed\n * const feed = new SocketPollClient();\n * // assign an action to a message type\n * feed.on(TYPE_EMERGENCY, items => {...});\n *\n * @export\n * @class SocketPollClient\n */\nvar SocketPollClient = /** @class */function () {\n    function SocketPollClient() {\n        this._typeCallbacks = {};\n    }\n    /**\n     * @template T\n     * @param {string} type\n     * @param {(items: T) => void} callback\n     * @memberof SocketPollClient\n     */\n    SocketPollClient.prototype.on = function (type, callback) {\n        this._typeCallbacks[type] = callback;\n        this.addSocketListener(type);\n    };\n    /**\n     * Initializes event listener for socket messages with the\n     * pre-initialized socket connection; passes event data from\n     * message to this class' `onMessage` method.\n     *\n     * @private\n     * @template T\n     * @template D\n     * @param {T} type\n     * @memberof SocketPollClient\n     */\n    SocketPollClient.prototype.addSocketListener = function (type) {\n        var _this = this;\n        var socket = new _1.SocketConnection(null, type);\n        socket.onMessage(function (event) {\n            return _this.onMessage(type, event);\n        });\n        console.log(\"[socket] added listener for \\\"\" + type + \"\\\"\");\n    };\n    /**\n     * Receives a socket's `MessageEvent`; parses the raw string data\n     * into a usable object; determines the type of emergency message\n     * and calls the appropriate callback with the parsed data as its\n     * first argument.\n     *\n     * @private\n     * @template T\n     * @template D\n     * @param {T} type\n     * @param {MessageEvent} event\n     * @memberof SocketPollClient\n     */\n    SocketPollClient.prototype.onMessage = function (type, event) {\n        var eventData = JSON.parse(event.data);\n        console.log(\"[socket] \" + eventData.type + \" message received\", eventData);\n        this._typeCallbacks[type](eventData);\n    };\n    return SocketPollClient;\n}();\nexports.SocketPollClient = SocketPollClient;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// mighty-socket-client.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1f4b39a54cbc312f78c1","export * from './types/xml';\nexport * from './types/rss';\nexport * from './types/rss-extras';\n\nexport * from './socket';\nexport * from './socket-client';\n\n\n\n// WEBPACK FOOTER //\n// ./client/index.ts","/**\n * Base class for providing a simple proxy to an instantiated\n * `WebSocket` connection.\n * \n * @export\n * @class SocketConnection\n */\nexport class SocketConnection {\n  private connection: WebSocket;\n  constructor(url?: string, endpoint?: string) {\n    if (!url) {\n      const { location } = document;\n      const { host, protocol, port } = location;\n      url = `${protocol.replace(/http/, 'ws')}//${ host.replace(/:.*/, '') }${ port ? ':8080' : '' }`;\n    }\n    url = `${url}/${endpoint || ''}`;\n    this.connection = new WebSocket(url);\n  }\n  onMessage(callback: (ev: MessageEvent) => any) {\n    this.connection.onmessage = callback;\n  }\n  close() {\n    this.connection.close();\n  }\n  send(what) {\n    this.connection.send(what);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/socket.ts","import { SocketConnection } from '.';\n\n/** Type for messages returned from socket server */\nexport type SocketPollMessage<T extends string, D> = {\n  type: T,\n  data: D\n};\n\n/**\n * This class represents the base hub for all socket poll related\n * messaging and action. Its primary purpose is to pre-initialize a\n * socket connection, as well as provide callback functions for all\n * configured message types.\n * \n * @example\n * // configure a message type\n * const TYPE_EMERGENCY = 'emergency';\n * // initialize a new feed\n * const feed = new SocketPollClient();\n * // assign an action to a message type\n * feed.on(TYPE_EMERGENCY, items => {...});\n * \n * @export\n * @class SocketPollClient\n */\nexport class SocketPollClient {\n\n  private _typeCallbacks: {\n    [type: string]: (items: any) => void\n  } = {};\n\n  /**\n   * @template T \n   * @param {string} type \n   * @param {(items: T) => void} callback \n   * @memberof SocketPollClient\n   */\n  on<T extends string, D>(type: T, callback: (eventData: SocketPollMessage<T, D>) => void) {\n    this._typeCallbacks[type] = callback;\n    this.addSocketListener(type);\n  }\n\n  /**\n   * Initializes event listener for socket messages with the\n   * pre-initialized socket connection; passes event data from\n   * message to this class' `onMessage` method.\n   * \n   * @private\n   * @template T \n   * @template D \n   * @param {T} type \n   * @memberof SocketPollClient\n   */\n  private addSocketListener<T extends string, D>(type: T) {\n    const socket = new SocketConnection(null, type)\n    socket.onMessage(event => this.onMessage<T, D>(type, event));\n    console.log(`[socket] added listener for \"${type}\"`);\n  }\n\n  /**\n   * Receives a socket's `MessageEvent`; parses the raw string data\n   * into a usable object; determines the type of emergency message\n   * and calls the appropriate callback with the parsed data as its\n   * first argument.\n   * \n   * @private\n   * @template T \n   * @template D \n   * @param {T} type \n   * @param {MessageEvent} event \n   * @memberof SocketPollClient\n   */\n  private onMessage<T extends string, D>(type: T, event: MessageEvent) {\n    const eventData: SocketPollMessage<T, D> = JSON.parse(event.data);\n    console.log(`[socket] ${eventData.type} message received`, eventData);\n    this._typeCallbacks[type](eventData);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./client/socket-client.ts"],"sourceRoot":""}